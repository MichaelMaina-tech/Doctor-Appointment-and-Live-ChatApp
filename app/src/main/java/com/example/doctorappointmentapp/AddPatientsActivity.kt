package com.example.doctorappointmentapp

import android.os.Bundle
import android.widget.Button
import android.widget.EditText
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import com.google.firebase.firestore.FirebaseFirestore

class AddPatientsActivity : AppCompatActivity() {

    private lateinit var firestore: FirebaseFirestore

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_add_patients)

        firestore = FirebaseFirestore.getInstance()

        val patientName = findViewById<EditText>(R.id.editTextPatientName)
        val patientEmail = findViewById<EditText>(R.id.editTextPatientEmail)
        val patientPhone = findViewById<EditText>(R.id.editTextPatientPhone)
        val patientAddress = findViewById<EditText>(R.id.editTextPatientAddress)
        val patientAge = findViewById<EditText>(R.id.editTextPatientAge)
        val patientGender = findViewById<EditText>(R.id.editTextPatientGender)
        val addPatientButton = findViewById<Button>(R.id.buttonAddPatient)

        addPatientButton.setOnClickListener {
            val name = patientName.text.toString().trim()
            val email = patientEmail.text.toString().trim()
            val phone = patientPhone.text.toString().trim()
            val address = patientAddress.text.toString().trim()
            val age = patientAge.text.toString().trim().toIntOrNull() ?: 0
            val gender = patientGender.text.toString().trim()

            if (name.isNotEmpty() && email.isNotEmpty() && phone.isNotEmpty() && address.isNotEmpty() && age > 0 && gender.isNotEmpty()) {
                val patient = Patient(
                    id = "", // ID will be generated by Firestore
                    name = name,
                    email = email,
                    phoneNumber = phone,
                    age = age,
                    gender = gender
                )
                savePatientToDatabase(patient)
            } else {
                Toast.makeText(this, "Please fill all fields correctly", Toast.LENGTH_SHORT).show()
            }
        }
    }

    private fun savePatientToDatabase(patient: Patient) {
        firestore.collection("patients")
            .add(patient)
            .addOnSuccessListener {
                Toast.makeText(this, "Patient added successfully", Toast.LENGTH_SHORT).show()
                clearFields()
            }
            .addOnFailureListener { e ->
                Toast.makeText(this, "Error adding patient: ${e.message}", Toast.LENGTH_SHORT).show()
            }
    }

    private fun clearFields() {
        findViewById<EditText>(R.id.editTextPatientName).text.clear()
        findViewById<EditText>(R.id.editTextPatientEmail).text.clear()
        findViewById<EditText>(R.id.editTextPatientPhone).text.clear()
        findViewById<EditText>(R.id.editTextPatientAddress).text.clear()
        findViewById<EditText>(R.id.editTextPatientAge).text.clear()
        findViewById<EditText>(R.id.editTextPatientGender).text.clear()
    }
}
